/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-03-04 01:31:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.DataIntegrante;
import java.util.LinkedList;
import java.util.HashMap;
import java.util.Collection;
import data.*;
import entities.*;
import java.time.Duration;
import java.time.LocalTime;
import java.util.concurrent.LinkedBlockingDeque;

public final class BitacoraTuneado_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("data");
    _jspx_imports_packages.add("entities");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Collection");
    _jspx_imports_classes.add("java.time.Duration");
    _jspx_imports_classes.add("java.time.LocalTime");
    _jspx_imports_classes.add("java.util.concurrent.LinkedBlockingDeque");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.util.LinkedList");
    _jspx_imports_classes.add("data.DataIntegrante");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <link href=\"./dist/css/style.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        body{\r\n");
      out.write("    background:#eee;\r\n");
      out.write("}\r\n");
      out.write(".card {\r\n");
      out.write("    box-shadow: 0 20px 27px 0 rgb(0 0 0 / 5%);\r\n");
      out.write("}\r\n");
      out.write(".card {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    min-width: 0;\r\n");
      out.write("    word-wrap: break-word;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    background-clip: border-box;\r\n");
      out.write("    border: 0 solid rgba(0,0,0,.125);\r\n");
      out.write("    border-radius: 1rem;\r\n");
      out.write("}\r\n");
      out.write(".img-thumbnail {\r\n");
      out.write("    padding: .25rem;\r\n");
      out.write("    background-color: #ecf2f5;\r\n");
      out.write("    border: 1px solid #dee2e6;\r\n");
      out.write("    border-radius: .25rem;\r\n");
      out.write("    max-width: 100%;\r\n");
      out.write("    height: auto;\r\n");
      out.write("}\r\n");
      out.write(".avatar-lg {\r\n");
      out.write("    height: 150px;\r\n");
      out.write("    width: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit] {\r\n");
      out.write("    padding:5px 15px; \r\n");
      out.write("    background:#ccc; \r\n");
      out.write("    border:0 none;\r\n");
      out.write("    cursor:pointer;\r\n");
      out.write("    -webkit-border-radius: 5px;\r\n");
      out.write("    border-radius: 5px; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background-color: #f4f4f4; margin: 0 !important;\">\r\n");
      out.write("		");

			if (session.getAttribute("id") == null)
			response.sendRedirect("LoginTUNEADO.jsp");
		
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    <br>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-lg-5 col-md-7 mx-auto my-auto\">\r\n");
      out.write("            <div class=\"card\">\r\n");
      out.write("                <div class=\"card-body px-lg-5 py-lg-5 text-center\">\r\n");
      out.write("                    <img src=\"./assets/images/logo-light-icon.png\"   class=\"rounded-circle avatar-lg img-thumbnail mb-4\" alt=\"profile-image\">\r\n");
      out.write("                    <h2 class=\"text-info\">Panel de Bitácoras UCP-PSG</h2>\r\n");
      out.write("                    <p class=\"mb-4\" style = \"font-family:themify;font-size:25px;font-style:normal;\">¿Qué desea hacer?.</p>\r\n");
      out.write("					<form action=\"bitacoraS\" method=\"post\">\r\n");
      out.write("						<input type = \"submit\" style = \"font-family:themify;font-size:15px;font-style:normal;\" value = \"Abrir Bitacora\"><br>\r\n");
      out.write("					</form>\r\n");
      out.write("				\r\n");
      out.write("					<form action=\"cerrarBitacoraS\" method=\"post\">\r\n");
      out.write("						<input type = \"submit\" style = \"font-family:themify;font-size:15px;font-style:normal;\" value = \"Cerrar Bitacora\"><br>\r\n");
      out.write("					</form>\r\n");
      out.write("					<a button class=\"btn btn-secondary\" style = \"font-family:themify;font-size:15px;font-style:normal;\" type=\"button\" href=\"HomeTuneada.jsp\">Volver a la home</a>\r\n");
      out.write("					\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"page-wrapper\">\r\n");
      out.write("            <footer class=\"footer text-center\">\r\n");
      out.write("                Panel de la faccion de Prosegur en [BA:RP] ||\r\n");
      out.write("                    <a href=\"https://github.com/Luchoragusa\">Luciano Ragusa</a> || \r\n");
      out.write("                    <a href=\"https://github.com/JuaniPucheta\">Juan Ignacio Pucheta</a>.|| \r\n");
      out.write("                    <a href=\"https://github.com/CamiloPereyra\">Camilo Pereyra</a>.\r\n");
      out.write("            </footer>\r\n");
      out.write("        </div>                \r\n");
      out.write("    </table>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
