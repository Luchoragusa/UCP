/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-03-04 01:26:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.*;
import entities.*;
import java.util.LinkedList;

public final class RegistrarStockArmaTUNEADO_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("data");
    _jspx_imports_packages.add("entities");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.LinkedList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\" >\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>[Mi inventario]</title>  \r\n");
      out.write("  <link rel=\"stylesheet\" href=\"./dist/css/armasV.css\">\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("    .btn-mensajes {\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      background-color: #7e799b;\r\n");
      out.write("      border-color: #7460ee;\r\n");
      out.write("      font-size: 19px;\r\n");
      out.write("      padding: 13px;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      width: 100px;\r\n");
      out.write("      border-radius: 20px;\r\n");
      out.write("      position: relative;\r\n");
      out.write("      bottom: -100px;\r\n");
      out.write("      margin-top: 30px;\r\n");
      out.write("    }   \r\n");
      out.write("  </style>\r\n");
      out.write("  <link href='https://fonts.googleapis.com/css?family=Rajdhani:600' rel='stylesheet' type='text/css'>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    ");
 
	    DataArma  da = new  DataArma();
		LinkedList<Arma> ar = da.getAll();
		DataStockarma ds = new DataStockarma();
		LinkedList<Stockarma> listaS = ds.getAll();
		for(Stockarma s :  listaS) {
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <div class=\"killFeed\">\r\n");
      out.write("      <div class=\"killer\">");
      out.print(s.getArma().getNombreArma() );
      out.write(" </div>\r\n");
      out.write("      ");

      	if(s.getArma().getNombreArma().equalsIgnoreCase("Revolver")){
      
      out.write("\r\n");
      out.write("      	<div class=\"weapon deagle\"></div>\r\n");
      out.write("      ");

      	} else if(s.getArma().getNombreArma().equalsIgnoreCase("AK-47")){      		
      
      out.write("\r\n");
      out.write("      	<div class=\"weapon ak47\"></div>\r\n");
      out.write("      ");

      	} else if(s.getArma().getNombreArma().equalsIgnoreCase("ApPistol")){      		
      
      out.write("\r\n");
      out.write("    	<div class=\"weapon appistol\"></div>\r\n");
      out.write("      ");

    	} else if(s.getArma().getNombreArma().equalsIgnoreCase("Mag7")){      		
      
      out.write("\r\n");
      out.write("		<div class=\"weapon mag7\"></div>\r\n");
      out.write("      ");

    	} else if(s.getArma().getNombreArma().equalsIgnoreCase("Francotirador")){      		
      
      out.write("\r\n");
      out.write("      	<div class=\"weapon awp\"></div>\r\n");
      out.write("      ");

    	} else if(s.getArma().getNombreArma().equalsIgnoreCase("Glock")){      		
      
      out.write("\r\n");
      out.write("      	<div class=\"weapon glock\"></div>\r\n");
      out.write("      ");

    	} else if(s.getArma().getNombreArma().equalsIgnoreCase("G3sg1")){ 
      
      out.write("\r\n");
      out.write("      	<div class=\"weapon g3sg1\"></div>\r\n");
      out.write("      ");

    	} else if(s.getArma().getNombreArma().equalsIgnoreCase("M4a1")){ 
      
      out.write("\r\n");
      out.write("      	<div class=\"weapon m4a1\"></div>\r\n");
      out.write("      ");

    	} 
      
      out.write("    	\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"killed\">\r\n");
      out.write("        Cantidad: ");
      out.print(s.getCantidad() );
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  	");

		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <br/><br/>\r\n");
      out.write("\r\n");
      out.write("  <table  align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"2\" width =\"500\">	\r\n");
      out.write("    <tr bgcolor=#71A6FF>\r\n");
      out.write("      <th>Tipo Arma</th>\r\n");
      out.write("      <th>Nombre Arma</th>\r\n");
      out.write("      <th>Fecha de carga</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    \r\n");
      out.write("    ");
 
		DataStockarma datastock = new DataStockarma();
		LinkedList<Stockarma> listS = datastock.getAll();
		for(Stockarma s :  listS) {
	
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("		<th bgcolor=#ffffff> ");
      out.print(s.getArma().getTipoArma() );
      out.write(" </th>\r\n");
      out.write("		<th bgcolor=#ffffff> ");
      out.print(s.getArma().getNombreArma() );
      out.write(" </th>\r\n");
      out.write("		<th bgcolor=#ffffff> ");
      out.print(s.getFecha() );
      out.write(" </th>\r\n");
      out.write("	");

		}
	
      out.write("    \r\n");
      out.write("  </table><br><br>\r\n");
      out.write("\r\n");
      out.write(" <div style=\"color:#ffffff\">\r\n");
      out.write(" <form action=\"registrarStockArmaS\" method=\"post\">Seleccione un arma para modificar el Stock.\r\n");
      out.write("		 <select name=\"arma\" > \r\n");
      out.write("		");

			for(Arma a : ar) {
		
      out.write("\r\n");
      out.write("	    <option value=\"");
      out.print(a.getIdArma());
      out.write("\"> \r\n");
      out.write("			");
 out.print(a.getNombreArma()); 
      out.write("\r\n");
      out.write("	    </option>\r\n");
      out.write("	    ");

			}
		
      out.write("\r\n");
      out.write("	</select><br><br>\r\n");
      out.write("\r\n");
      out.write("	Ingrese el nuevo stock: \r\n");
      out.write("	<input type = \"number\" name = \"newStock\" Required><br><br>\r\n");
      out.write("		\r\n");
      out.write("	<input type = \"submit\" value = \"Guardar cambios\" Required><br>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write(" </div>\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("      <a button class=\"btn-mensajes\" class=\"btn btn-primary\" href=\"HomeTuneada.jsp\">Home</a>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
